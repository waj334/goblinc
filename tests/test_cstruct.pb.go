package tests

import (
	math "math"
)

type Test0 struct {
	Tuint8      uint8
	Tarruint8   [4]uint8
	Tint8       int8
	Tarrint8    [4]uint8
	Tuint32     uint32
	Tarruint32  [4]uint32
	Tint32      int32
	Tarrint32   [4]uint32
	Tuint64     uint64
	Tarruint64  [4]uint64
	Tint64      int64
	Tarrint64   [4]uint64
	Tfloat32    float32
	Tarrfloat32 [4]float32
	Tfloat64    float64
	Tarrfloat64 [4]float64
	Tbytes      [4]byte
}

func (str *Test0) Bytes() (output [196]byte) {
	output[0] = byte(str.Tuint8)
	copy(output[1:], str.Tarruint8[:])
	output[5] = byte(str.Tint8)
	copy(output[6:], str.Tarrint8[:])
	output[10] = byte(str.Tuint32 >> (8 * 3))
	output[11] = byte(str.Tuint32 >> (8 * 2))
	output[12] = byte(str.Tuint32 >> (8 * 1))
	output[13] = byte(str.Tuint32 >> (8 * 0))
	output[14] = byte(str.Tarruint32[0] >> (8 * 3))
	output[15] = byte(str.Tarruint32[0] >> (8 * 2))
	output[16] = byte(str.Tarruint32[0] >> (8 * 1))
	output[17] = byte(str.Tarruint32[0] >> (8 * 0))
	output[18] = byte(str.Tarruint32[1] >> (8 * 3))
	output[19] = byte(str.Tarruint32[1] >> (8 * 2))
	output[20] = byte(str.Tarruint32[1] >> (8 * 1))
	output[21] = byte(str.Tarruint32[1] >> (8 * 0))
	output[22] = byte(str.Tarruint32[2] >> (8 * 3))
	output[23] = byte(str.Tarruint32[2] >> (8 * 2))
	output[24] = byte(str.Tarruint32[2] >> (8 * 1))
	output[25] = byte(str.Tarruint32[2] >> (8 * 0))
	output[26] = byte(str.Tarruint32[3] >> (8 * 3))
	output[27] = byte(str.Tarruint32[3] >> (8 * 2))
	output[28] = byte(str.Tarruint32[3] >> (8 * 1))
	output[29] = byte(str.Tarruint32[3] >> (8 * 0))
	output[30] = byte(str.Tint32 >> (8 * 3))
	output[31] = byte(str.Tint32 >> (8 * 2))
	output[32] = byte(str.Tint32 >> (8 * 1))
	output[33] = byte(str.Tint32 >> (8 * 0))
	output[34] = byte(str.Tarrint32[0] >> (8 * 3))
	output[35] = byte(str.Tarrint32[0] >> (8 * 2))
	output[36] = byte(str.Tarrint32[0] >> (8 * 1))
	output[37] = byte(str.Tarrint32[0] >> (8 * 0))
	output[38] = byte(str.Tarrint32[1] >> (8 * 3))
	output[39] = byte(str.Tarrint32[1] >> (8 * 2))
	output[40] = byte(str.Tarrint32[1] >> (8 * 1))
	output[41] = byte(str.Tarrint32[1] >> (8 * 0))
	output[42] = byte(str.Tarrint32[2] >> (8 * 3))
	output[43] = byte(str.Tarrint32[2] >> (8 * 2))
	output[44] = byte(str.Tarrint32[2] >> (8 * 1))
	output[45] = byte(str.Tarrint32[2] >> (8 * 0))
	output[46] = byte(str.Tarrint32[3] >> (8 * 3))
	output[47] = byte(str.Tarrint32[3] >> (8 * 2))
	output[48] = byte(str.Tarrint32[3] >> (8 * 1))
	output[49] = byte(str.Tarrint32[3] >> (8 * 0))
	output[50] = byte(str.Tuint64 >> (8 * 7))
	output[51] = byte(str.Tuint64 >> (8 * 6))
	output[52] = byte(str.Tuint64 >> (8 * 5))
	output[53] = byte(str.Tuint64 >> (8 * 4))
	output[54] = byte(str.Tuint64 >> (8 * 3))
	output[55] = byte(str.Tuint64 >> (8 * 2))
	output[56] = byte(str.Tuint64 >> (8 * 1))
	output[57] = byte(str.Tuint64 >> (8 * 0))
	output[58] = byte(str.Tarruint64[0] >> (8 * 7))
	output[59] = byte(str.Tarruint64[0] >> (8 * 6))
	output[60] = byte(str.Tarruint64[0] >> (8 * 5))
	output[61] = byte(str.Tarruint64[0] >> (8 * 4))
	output[62] = byte(str.Tarruint64[0] >> (8 * 3))
	output[63] = byte(str.Tarruint64[0] >> (8 * 2))
	output[64] = byte(str.Tarruint64[0] >> (8 * 1))
	output[65] = byte(str.Tarruint64[0] >> (8 * 0))
	output[66] = byte(str.Tarruint64[1] >> (8 * 7))
	output[67] = byte(str.Tarruint64[1] >> (8 * 6))
	output[68] = byte(str.Tarruint64[1] >> (8 * 5))
	output[69] = byte(str.Tarruint64[1] >> (8 * 4))
	output[70] = byte(str.Tarruint64[1] >> (8 * 3))
	output[71] = byte(str.Tarruint64[1] >> (8 * 2))
	output[72] = byte(str.Tarruint64[1] >> (8 * 1))
	output[73] = byte(str.Tarruint64[1] >> (8 * 0))
	output[74] = byte(str.Tarruint64[2] >> (8 * 7))
	output[75] = byte(str.Tarruint64[2] >> (8 * 6))
	output[76] = byte(str.Tarruint64[2] >> (8 * 5))
	output[77] = byte(str.Tarruint64[2] >> (8 * 4))
	output[78] = byte(str.Tarruint64[2] >> (8 * 3))
	output[79] = byte(str.Tarruint64[2] >> (8 * 2))
	output[80] = byte(str.Tarruint64[2] >> (8 * 1))
	output[81] = byte(str.Tarruint64[2] >> (8 * 0))
	output[82] = byte(str.Tarruint64[3] >> (8 * 7))
	output[83] = byte(str.Tarruint64[3] >> (8 * 6))
	output[84] = byte(str.Tarruint64[3] >> (8 * 5))
	output[85] = byte(str.Tarruint64[3] >> (8 * 4))
	output[86] = byte(str.Tarruint64[3] >> (8 * 3))
	output[87] = byte(str.Tarruint64[3] >> (8 * 2))
	output[88] = byte(str.Tarruint64[3] >> (8 * 1))
	output[89] = byte(str.Tarruint64[3] >> (8 * 0))
	output[90] = byte(str.Tint64 >> (8 * 7))
	output[91] = byte(str.Tint64 >> (8 * 6))
	output[92] = byte(str.Tint64 >> (8 * 5))
	output[93] = byte(str.Tint64 >> (8 * 4))
	output[94] = byte(str.Tint64 >> (8 * 3))
	output[95] = byte(str.Tint64 >> (8 * 2))
	output[96] = byte(str.Tint64 >> (8 * 1))
	output[97] = byte(str.Tint64 >> (8 * 0))
	output[98] = byte(str.Tarrint64[0] >> (8 * 7))
	output[99] = byte(str.Tarrint64[0] >> (8 * 6))
	output[100] = byte(str.Tarrint64[0] >> (8 * 5))
	output[101] = byte(str.Tarrint64[0] >> (8 * 4))
	output[102] = byte(str.Tarrint64[0] >> (8 * 3))
	output[103] = byte(str.Tarrint64[0] >> (8 * 2))
	output[104] = byte(str.Tarrint64[0] >> (8 * 1))
	output[105] = byte(str.Tarrint64[0] >> (8 * 0))
	output[106] = byte(str.Tarrint64[1] >> (8 * 7))
	output[107] = byte(str.Tarrint64[1] >> (8 * 6))
	output[108] = byte(str.Tarrint64[1] >> (8 * 5))
	output[109] = byte(str.Tarrint64[1] >> (8 * 4))
	output[110] = byte(str.Tarrint64[1] >> (8 * 3))
	output[111] = byte(str.Tarrint64[1] >> (8 * 2))
	output[112] = byte(str.Tarrint64[1] >> (8 * 1))
	output[113] = byte(str.Tarrint64[1] >> (8 * 0))
	output[114] = byte(str.Tarrint64[2] >> (8 * 7))
	output[115] = byte(str.Tarrint64[2] >> (8 * 6))
	output[116] = byte(str.Tarrint64[2] >> (8 * 5))
	output[117] = byte(str.Tarrint64[2] >> (8 * 4))
	output[118] = byte(str.Tarrint64[2] >> (8 * 3))
	output[119] = byte(str.Tarrint64[2] >> (8 * 2))
	output[120] = byte(str.Tarrint64[2] >> (8 * 1))
	output[121] = byte(str.Tarrint64[2] >> (8 * 0))
	output[122] = byte(str.Tarrint64[3] >> (8 * 7))
	output[123] = byte(str.Tarrint64[3] >> (8 * 6))
	output[124] = byte(str.Tarrint64[3] >> (8 * 5))
	output[125] = byte(str.Tarrint64[3] >> (8 * 4))
	output[126] = byte(str.Tarrint64[3] >> (8 * 3))
	output[127] = byte(str.Tarrint64[3] >> (8 * 2))
	output[128] = byte(str.Tarrint64[3] >> (8 * 1))
	output[129] = byte(str.Tarrint64[3] >> (8 * 0))
	Tfloat32_bits := math.Float32bits(str.Tfloat32)
	output[130] = byte(Tfloat32_bits >> (8 * 3))
	output[131] = byte(Tfloat32_bits >> (8 * 2))
	output[132] = byte(Tfloat32_bits >> (8 * 1))
	output[133] = byte(Tfloat32_bits >> (8 * 0))
	Tarrfloat32_bits := []uint32{
		math.Float32bits(str.Tarrfloat32[0]),
		math.Float32bits(str.Tarrfloat32[1]),
		math.Float32bits(str.Tarrfloat32[2]),
		math.Float32bits(str.Tarrfloat32[3]),
	}
	output[134] = byte(Tarrfloat32_bits[0] >> (8 * 3))
	output[135] = byte(Tarrfloat32_bits[0] >> (8 * 2))
	output[136] = byte(Tarrfloat32_bits[0] >> (8 * 1))
	output[137] = byte(Tarrfloat32_bits[0] >> (8 * 0))
	output[138] = byte(Tarrfloat32_bits[1] >> (8 * 3))
	output[139] = byte(Tarrfloat32_bits[1] >> (8 * 2))
	output[140] = byte(Tarrfloat32_bits[1] >> (8 * 1))
	output[141] = byte(Tarrfloat32_bits[1] >> (8 * 0))
	output[142] = byte(Tarrfloat32_bits[2] >> (8 * 3))
	output[143] = byte(Tarrfloat32_bits[2] >> (8 * 2))
	output[144] = byte(Tarrfloat32_bits[2] >> (8 * 1))
	output[145] = byte(Tarrfloat32_bits[2] >> (8 * 0))
	output[146] = byte(Tarrfloat32_bits[3] >> (8 * 3))
	output[147] = byte(Tarrfloat32_bits[3] >> (8 * 2))
	output[148] = byte(Tarrfloat32_bits[3] >> (8 * 1))
	output[149] = byte(Tarrfloat32_bits[3] >> (8 * 0))
	Tfloat64_bits := math.Float64bits(str.Tfloat64)
	output[150] = byte(Tfloat64_bits >> (8 * 7))
	output[151] = byte(Tfloat64_bits >> (8 * 6))
	output[152] = byte(Tfloat64_bits >> (8 * 5))
	output[153] = byte(Tfloat64_bits >> (8 * 4))
	output[154] = byte(Tfloat64_bits >> (8 * 3))
	output[155] = byte(Tfloat64_bits >> (8 * 2))
	output[156] = byte(Tfloat64_bits >> (8 * 1))
	output[157] = byte(Tfloat64_bits >> (8 * 0))
	Tarrfloat64_bits := []uint64{
		math.Float64bits(str.Tarrfloat64[0]),
		math.Float64bits(str.Tarrfloat64[1]),
		math.Float64bits(str.Tarrfloat64[2]),
		math.Float64bits(str.Tarrfloat64[3]),
	}
	output[158] = byte(Tarrfloat64_bits[0] >> (8 * 7))
	output[159] = byte(Tarrfloat64_bits[0] >> (8 * 6))
	output[160] = byte(Tarrfloat64_bits[0] >> (8 * 5))
	output[161] = byte(Tarrfloat64_bits[0] >> (8 * 4))
	output[162] = byte(Tarrfloat64_bits[0] >> (8 * 3))
	output[163] = byte(Tarrfloat64_bits[0] >> (8 * 2))
	output[164] = byte(Tarrfloat64_bits[0] >> (8 * 1))
	output[165] = byte(Tarrfloat64_bits[0] >> (8 * 0))
	output[166] = byte(Tarrfloat64_bits[1] >> (8 * 7))
	output[167] = byte(Tarrfloat64_bits[1] >> (8 * 6))
	output[168] = byte(Tarrfloat64_bits[1] >> (8 * 5))
	output[169] = byte(Tarrfloat64_bits[1] >> (8 * 4))
	output[170] = byte(Tarrfloat64_bits[1] >> (8 * 3))
	output[171] = byte(Tarrfloat64_bits[1] >> (8 * 2))
	output[172] = byte(Tarrfloat64_bits[1] >> (8 * 1))
	output[173] = byte(Tarrfloat64_bits[1] >> (8 * 0))
	output[174] = byte(Tarrfloat64_bits[2] >> (8 * 7))
	output[175] = byte(Tarrfloat64_bits[2] >> (8 * 6))
	output[176] = byte(Tarrfloat64_bits[2] >> (8 * 5))
	output[177] = byte(Tarrfloat64_bits[2] >> (8 * 4))
	output[178] = byte(Tarrfloat64_bits[2] >> (8 * 3))
	output[179] = byte(Tarrfloat64_bits[2] >> (8 * 2))
	output[180] = byte(Tarrfloat64_bits[2] >> (8 * 1))
	output[181] = byte(Tarrfloat64_bits[2] >> (8 * 0))
	output[182] = byte(Tarrfloat64_bits[3] >> (8 * 7))
	output[183] = byte(Tarrfloat64_bits[3] >> (8 * 6))
	output[184] = byte(Tarrfloat64_bits[3] >> (8 * 5))
	output[185] = byte(Tarrfloat64_bits[3] >> (8 * 4))
	output[186] = byte(Tarrfloat64_bits[3] >> (8 * 3))
	output[187] = byte(Tarrfloat64_bits[3] >> (8 * 2))
	output[188] = byte(Tarrfloat64_bits[3] >> (8 * 1))
	output[189] = byte(Tarrfloat64_bits[3] >> (8 * 0))
	copy(output[190:], str.Tbytes[:])
	return
}

func (str *Test0) FromBytes(input []byte) bool {
	str.Tuint8 = uint8(input[0])
	copy(str.Tarruint8[:], input[1:])
	str.Tint8 = int8(input[5])
	copy(str.Tarrint8[:], input[6:])
	str.Tuint32 |= uint32(input[10]) << (8 * 3)
	str.Tuint32 |= uint32(input[11]) << (8 * 2)
	str.Tuint32 |= uint32(input[12]) << (8 * 1)
	str.Tuint32 |= uint32(input[13]) << (8 * 0)
	str.Tarruint32[0] |= uint32(input[14]) << (8 * 3)
	str.Tarruint32[0] |= uint32(input[15]) << (8 * 2)
	str.Tarruint32[0] |= uint32(input[16]) << (8 * 1)
	str.Tarruint32[0] |= uint32(input[17]) << (8 * 0)
	str.Tarruint32[1] |= uint32(input[18]) << (8 * 3)
	str.Tarruint32[1] |= uint32(input[19]) << (8 * 2)
	str.Tarruint32[1] |= uint32(input[20]) << (8 * 1)
	str.Tarruint32[1] |= uint32(input[21]) << (8 * 0)
	str.Tarruint32[2] |= uint32(input[22]) << (8 * 3)
	str.Tarruint32[2] |= uint32(input[23]) << (8 * 2)
	str.Tarruint32[2] |= uint32(input[24]) << (8 * 1)
	str.Tarruint32[2] |= uint32(input[25]) << (8 * 0)
	str.Tarruint32[3] |= uint32(input[26]) << (8 * 3)
	str.Tarruint32[3] |= uint32(input[27]) << (8 * 2)
	str.Tarruint32[3] |= uint32(input[28]) << (8 * 1)
	str.Tarruint32[3] |= uint32(input[29]) << (8 * 0)
	str.Tint32 |= int32(input[30]) << (8 * 3)
	str.Tint32 |= int32(input[31]) << (8 * 2)
	str.Tint32 |= int32(input[32]) << (8 * 1)
	str.Tint32 |= int32(input[33]) << (8 * 0)
	str.Tarrint32[0] |= uint32(input[34]) << (8 * 3)
	str.Tarrint32[0] |= uint32(input[35]) << (8 * 2)
	str.Tarrint32[0] |= uint32(input[36]) << (8 * 1)
	str.Tarrint32[0] |= uint32(input[37]) << (8 * 0)
	str.Tarrint32[1] |= uint32(input[38]) << (8 * 3)
	str.Tarrint32[1] |= uint32(input[39]) << (8 * 2)
	str.Tarrint32[1] |= uint32(input[40]) << (8 * 1)
	str.Tarrint32[1] |= uint32(input[41]) << (8 * 0)
	str.Tarrint32[2] |= uint32(input[42]) << (8 * 3)
	str.Tarrint32[2] |= uint32(input[43]) << (8 * 2)
	str.Tarrint32[2] |= uint32(input[44]) << (8 * 1)
	str.Tarrint32[2] |= uint32(input[45]) << (8 * 0)
	str.Tarrint32[3] |= uint32(input[46]) << (8 * 3)
	str.Tarrint32[3] |= uint32(input[47]) << (8 * 2)
	str.Tarrint32[3] |= uint32(input[48]) << (8 * 1)
	str.Tarrint32[3] |= uint32(input[49]) << (8 * 0)
	str.Tuint64 |= uint64(input[50]) << (8 * 7)
	str.Tuint64 |= uint64(input[51]) << (8 * 6)
	str.Tuint64 |= uint64(input[52]) << (8 * 5)
	str.Tuint64 |= uint64(input[53]) << (8 * 4)
	str.Tuint64 |= uint64(input[54]) << (8 * 3)
	str.Tuint64 |= uint64(input[55]) << (8 * 2)
	str.Tuint64 |= uint64(input[56]) << (8 * 1)
	str.Tuint64 |= uint64(input[57]) << (8 * 0)
	str.Tarruint64[0] |= uint64(input[58]) << (8 * 7)
	str.Tarruint64[0] |= uint64(input[59]) << (8 * 6)
	str.Tarruint64[0] |= uint64(input[60]) << (8 * 5)
	str.Tarruint64[0] |= uint64(input[61]) << (8 * 4)
	str.Tarruint64[0] |= uint64(input[62]) << (8 * 3)
	str.Tarruint64[0] |= uint64(input[63]) << (8 * 2)
	str.Tarruint64[0] |= uint64(input[64]) << (8 * 1)
	str.Tarruint64[0] |= uint64(input[65]) << (8 * 0)
	str.Tarruint64[1] |= uint64(input[66]) << (8 * 7)
	str.Tarruint64[1] |= uint64(input[67]) << (8 * 6)
	str.Tarruint64[1] |= uint64(input[68]) << (8 * 5)
	str.Tarruint64[1] |= uint64(input[69]) << (8 * 4)
	str.Tarruint64[1] |= uint64(input[70]) << (8 * 3)
	str.Tarruint64[1] |= uint64(input[71]) << (8 * 2)
	str.Tarruint64[1] |= uint64(input[72]) << (8 * 1)
	str.Tarruint64[1] |= uint64(input[73]) << (8 * 0)
	str.Tarruint64[2] |= uint64(input[74]) << (8 * 7)
	str.Tarruint64[2] |= uint64(input[75]) << (8 * 6)
	str.Tarruint64[2] |= uint64(input[76]) << (8 * 5)
	str.Tarruint64[2] |= uint64(input[77]) << (8 * 4)
	str.Tarruint64[2] |= uint64(input[78]) << (8 * 3)
	str.Tarruint64[2] |= uint64(input[79]) << (8 * 2)
	str.Tarruint64[2] |= uint64(input[80]) << (8 * 1)
	str.Tarruint64[2] |= uint64(input[81]) << (8 * 0)
	str.Tarruint64[3] |= uint64(input[82]) << (8 * 7)
	str.Tarruint64[3] |= uint64(input[83]) << (8 * 6)
	str.Tarruint64[3] |= uint64(input[84]) << (8 * 5)
	str.Tarruint64[3] |= uint64(input[85]) << (8 * 4)
	str.Tarruint64[3] |= uint64(input[86]) << (8 * 3)
	str.Tarruint64[3] |= uint64(input[87]) << (8 * 2)
	str.Tarruint64[3] |= uint64(input[88]) << (8 * 1)
	str.Tarruint64[3] |= uint64(input[89]) << (8 * 0)
	str.Tint64 |= int64(input[90]) << (8 * 7)
	str.Tint64 |= int64(input[91]) << (8 * 6)
	str.Tint64 |= int64(input[92]) << (8 * 5)
	str.Tint64 |= int64(input[93]) << (8 * 4)
	str.Tint64 |= int64(input[94]) << (8 * 3)
	str.Tint64 |= int64(input[95]) << (8 * 2)
	str.Tint64 |= int64(input[96]) << (8 * 1)
	str.Tint64 |= int64(input[97]) << (8 * 0)
	str.Tarrint64[0] |= uint64(input[98]) << (8 * 7)
	str.Tarrint64[0] |= uint64(input[99]) << (8 * 6)
	str.Tarrint64[0] |= uint64(input[100]) << (8 * 5)
	str.Tarrint64[0] |= uint64(input[101]) << (8 * 4)
	str.Tarrint64[0] |= uint64(input[102]) << (8 * 3)
	str.Tarrint64[0] |= uint64(input[103]) << (8 * 2)
	str.Tarrint64[0] |= uint64(input[104]) << (8 * 1)
	str.Tarrint64[0] |= uint64(input[105]) << (8 * 0)
	str.Tarrint64[1] |= uint64(input[106]) << (8 * 7)
	str.Tarrint64[1] |= uint64(input[107]) << (8 * 6)
	str.Tarrint64[1] |= uint64(input[108]) << (8 * 5)
	str.Tarrint64[1] |= uint64(input[109]) << (8 * 4)
	str.Tarrint64[1] |= uint64(input[110]) << (8 * 3)
	str.Tarrint64[1] |= uint64(input[111]) << (8 * 2)
	str.Tarrint64[1] |= uint64(input[112]) << (8 * 1)
	str.Tarrint64[1] |= uint64(input[113]) << (8 * 0)
	str.Tarrint64[2] |= uint64(input[114]) << (8 * 7)
	str.Tarrint64[2] |= uint64(input[115]) << (8 * 6)
	str.Tarrint64[2] |= uint64(input[116]) << (8 * 5)
	str.Tarrint64[2] |= uint64(input[117]) << (8 * 4)
	str.Tarrint64[2] |= uint64(input[118]) << (8 * 3)
	str.Tarrint64[2] |= uint64(input[119]) << (8 * 2)
	str.Tarrint64[2] |= uint64(input[120]) << (8 * 1)
	str.Tarrint64[2] |= uint64(input[121]) << (8 * 0)
	str.Tarrint64[3] |= uint64(input[122]) << (8 * 7)
	str.Tarrint64[3] |= uint64(input[123]) << (8 * 6)
	str.Tarrint64[3] |= uint64(input[124]) << (8 * 5)
	str.Tarrint64[3] |= uint64(input[125]) << (8 * 4)
	str.Tarrint64[3] |= uint64(input[126]) << (8 * 3)
	str.Tarrint64[3] |= uint64(input[127]) << (8 * 2)
	str.Tarrint64[3] |= uint64(input[128]) << (8 * 1)
	str.Tarrint64[3] |= uint64(input[129]) << (8 * 0)
	Tfloat32_bits := uint32(0)
	Tfloat32_bits |= uint32(input[130]) << (8 * 3)
	Tfloat32_bits |= uint32(input[131]) << (8 * 2)
	Tfloat32_bits |= uint32(input[132]) << (8 * 1)
	Tfloat32_bits |= uint32(input[133]) << (8 * 0)
	str.Tfloat32 = math.Float32frombits(Tfloat32_bits)
	Tarrfloat32_bits := []uint32{
		math.Float32bits(str.Tarrfloat32[0]),
		math.Float32bits(str.Tarrfloat32[1]),
		math.Float32bits(str.Tarrfloat32[2]),
		math.Float32bits(str.Tarrfloat32[3]),
	}
	Tarrfloat32_bits[0] |= uint32(input[134]) << (8 * 3)
	Tarrfloat32_bits[0] |= uint32(input[135]) << (8 * 2)
	Tarrfloat32_bits[0] |= uint32(input[136]) << (8 * 1)
	Tarrfloat32_bits[0] |= uint32(input[137]) << (8 * 0)
	Tarrfloat32_bits[1] |= uint32(input[138]) << (8 * 3)
	Tarrfloat32_bits[1] |= uint32(input[139]) << (8 * 2)
	Tarrfloat32_bits[1] |= uint32(input[140]) << (8 * 1)
	Tarrfloat32_bits[1] |= uint32(input[141]) << (8 * 0)
	Tarrfloat32_bits[2] |= uint32(input[142]) << (8 * 3)
	Tarrfloat32_bits[2] |= uint32(input[143]) << (8 * 2)
	Tarrfloat32_bits[2] |= uint32(input[144]) << (8 * 1)
	Tarrfloat32_bits[2] |= uint32(input[145]) << (8 * 0)
	Tarrfloat32_bits[3] |= uint32(input[146]) << (8 * 3)
	Tarrfloat32_bits[3] |= uint32(input[147]) << (8 * 2)
	Tarrfloat32_bits[3] |= uint32(input[148]) << (8 * 1)
	Tarrfloat32_bits[3] |= uint32(input[149]) << (8 * 0)
	str.Tarrfloat32[0] = math.Float32frombits(Tarrfloat32_bits[0])
	str.Tarrfloat32[1] = math.Float32frombits(Tarrfloat32_bits[1])
	str.Tarrfloat32[2] = math.Float32frombits(Tarrfloat32_bits[2])
	str.Tarrfloat32[3] = math.Float32frombits(Tarrfloat32_bits[3])
	Tfloat64_bits := uint64(0)
	Tfloat64_bits |= uint64(input[150]) << (8 * 7)
	Tfloat64_bits |= uint64(input[151]) << (8 * 6)
	Tfloat64_bits |= uint64(input[152]) << (8 * 5)
	Tfloat64_bits |= uint64(input[153]) << (8 * 4)
	Tfloat64_bits |= uint64(input[154]) << (8 * 3)
	Tfloat64_bits |= uint64(input[155]) << (8 * 2)
	Tfloat64_bits |= uint64(input[156]) << (8 * 1)
	Tfloat64_bits |= uint64(input[157]) << (8 * 0)
	str.Tfloat64 = math.Float64frombits(Tfloat64_bits)
	Tarrfloat64_bits := []uint64{
		math.Float64bits(str.Tarrfloat64[0]),
		math.Float64bits(str.Tarrfloat64[1]),
		math.Float64bits(str.Tarrfloat64[2]),
		math.Float64bits(str.Tarrfloat64[3]),
	}
	Tarrfloat64_bits[0] |= uint64(input[158]) << (8 * 7)
	Tarrfloat64_bits[0] |= uint64(input[159]) << (8 * 6)
	Tarrfloat64_bits[0] |= uint64(input[160]) << (8 * 5)
	Tarrfloat64_bits[0] |= uint64(input[161]) << (8 * 4)
	Tarrfloat64_bits[0] |= uint64(input[162]) << (8 * 3)
	Tarrfloat64_bits[0] |= uint64(input[163]) << (8 * 2)
	Tarrfloat64_bits[0] |= uint64(input[164]) << (8 * 1)
	Tarrfloat64_bits[0] |= uint64(input[165]) << (8 * 0)
	Tarrfloat64_bits[1] |= uint64(input[166]) << (8 * 7)
	Tarrfloat64_bits[1] |= uint64(input[167]) << (8 * 6)
	Tarrfloat64_bits[1] |= uint64(input[168]) << (8 * 5)
	Tarrfloat64_bits[1] |= uint64(input[169]) << (8 * 4)
	Tarrfloat64_bits[1] |= uint64(input[170]) << (8 * 3)
	Tarrfloat64_bits[1] |= uint64(input[171]) << (8 * 2)
	Tarrfloat64_bits[1] |= uint64(input[172]) << (8 * 1)
	Tarrfloat64_bits[1] |= uint64(input[173]) << (8 * 0)
	Tarrfloat64_bits[2] |= uint64(input[174]) << (8 * 7)
	Tarrfloat64_bits[2] |= uint64(input[175]) << (8 * 6)
	Tarrfloat64_bits[2] |= uint64(input[176]) << (8 * 5)
	Tarrfloat64_bits[2] |= uint64(input[177]) << (8 * 4)
	Tarrfloat64_bits[2] |= uint64(input[178]) << (8 * 3)
	Tarrfloat64_bits[2] |= uint64(input[179]) << (8 * 2)
	Tarrfloat64_bits[2] |= uint64(input[180]) << (8 * 1)
	Tarrfloat64_bits[2] |= uint64(input[181]) << (8 * 0)
	Tarrfloat64_bits[3] |= uint64(input[182]) << (8 * 7)
	Tarrfloat64_bits[3] |= uint64(input[183]) << (8 * 6)
	Tarrfloat64_bits[3] |= uint64(input[184]) << (8 * 5)
	Tarrfloat64_bits[3] |= uint64(input[185]) << (8 * 4)
	Tarrfloat64_bits[3] |= uint64(input[186]) << (8 * 3)
	Tarrfloat64_bits[3] |= uint64(input[187]) << (8 * 2)
	Tarrfloat64_bits[3] |= uint64(input[188]) << (8 * 1)
	Tarrfloat64_bits[3] |= uint64(input[189]) << (8 * 0)
	str.Tarrfloat64[0] = math.Float64frombits(Tarrfloat64_bits[0])
	str.Tarrfloat64[1] = math.Float64frombits(Tarrfloat64_bits[1])
	str.Tarrfloat64[2] = math.Float64frombits(Tarrfloat64_bits[2])
	str.Tarrfloat64[3] = math.Float64frombits(Tarrfloat64_bits[3])
	copy(str.Tbytes[:], input[190:])
	return true
}

func (str *Test0) CopyTo(dest []byte) {
	data := str.Bytes()
	copy(dest, data[:])
}

func (str *Test0) Length() int {
	return 196
}
